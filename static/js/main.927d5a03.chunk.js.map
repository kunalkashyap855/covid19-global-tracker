{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/LastUpdated/LastUpdated.jsx","app.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/LastUpdated/LastUpdated.module.css","images/image.png"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","console","log","message","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Cards","className","styles","container","Grid","spacinf","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","LastUpdated","lastUpdateTime","Date","toUTCString","replace","slice","App","state","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.927d5a03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1LnRW\",\"card\":\"Cards_card__1K1kI\",\"infected\":\"Cards_infected__3-phO\",\"recovered\":\"Cards_recovered__3xmzi\",\"deaths\":\"Cards_deaths__2BG-S\"};","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n    \r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }));\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries }} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error.message)\r\n    }\r\n}","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate} }) => {\r\n    \r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacinf={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">Number of confirmed cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths}, country }) => {\r\n\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length \r\n        ? (\r\n          <Line\r\n            data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n          />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: [ 'rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                        data: [confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text:`Current state in ${country}`}\r\n                }}\r\n            />\r\n        ) : null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option value={country} key={i}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport styles from './LastUpdated.module.css';\r\n\r\nconst LastUpdated = ({ data: { lastUpdate } }) => {\r\n    \r\n    const lastUpdateTime = new Date(lastUpdate).toUTCString().replace(\" 2020\", \",\").slice(5);  //this removes the day and 2020 from the received string\r\n    \r\n    return (\r\n        <div className={styles.container} >\r\n            <Typography color=\"textSecondary\"><strong>{lastUpdateTime}</strong></Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LastUpdated;","import React from 'react';\r\n\r\nimport { fetchData } from './api';\r\n\r\n// components\r\nimport Cards from './components/Cards/Cards';\r\nimport Chart from './components/Chart/Chart';\r\nimport CountryPicker from './components/CountryPicker/CountryPicker';\r\nimport LastUpdated from './components/LastUpdated/LastUpdated';\r\n\r\nimport styles from './App.module.css';\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const data = await fetchData();\r\n\r\n        this.setState({ data })\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        // fetch the data\r\n        const data = await fetchData(country);\r\n\r\n        // set the state\r\n        this.setState({ data, country })\r\n    }\r\n\r\n    render () {\r\n        const { data, country } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\r\n                <LastUpdated data={data} />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__E3fsq\",\"image\":\"App_image__2sYAF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1AzXd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3k7ll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LastUpdated_container__2yEcZ\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}